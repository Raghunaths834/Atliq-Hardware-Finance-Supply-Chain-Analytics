Atliq-Finance-Analytics

1/   Generate a report of individual product sales (aggregated on a monthly basis) for CROMA India customer for FY= 2021
 
  The report should have the following fields,
  1.	Month
  2.	Product Name
  3.	Variant
  4.	Sold Quantity
  5.	Gross Price per item
  6.	Gross price total
        
-- a/  first grab customer codes for Croma india

SELECT * FROM gdb0041.dim_customer where customer  like "%Croma%" AND market="India" ;


--b/ create a function 'get_fiscal_year' to get fiscal year by passing the date

CREATE DEFINER=`root`@`localhost` FUNCTION `get_fisical_year`(calender_date DATE) RETURNS int
    DETERMINISTIC
BEGIN

   declare fiscal_year int;
   set fiscal_year = YEAR(DATE_ADD(calender_date, INTERVAL 4 MONTH));
   RETURN fiscal_year;
END


--c/ create a function â€˜get_fisical_quaterâ€™ to get fiscal year by passing the date

CREATE DEFINER=`root`@`localhost` FUNCTION `get_fisical_quater`(calender_date date) RETURNS char(2) CHARSET utf8mb4
    DETERMINISTIC
BEGIN
declare m tinyint;
declare qtr char(2);
    set m = month(calender_date);
    case 
       when m in (9,10,11) then
       set qtr = "Q1";
       when m in (12,1,2) then
       set qtr = "Q2";
       when m in (3,4,5) then
       set qtr = "Q3";
       ELSE
       set qtr = "Q4";
     end case;
RETURN qtr;
END


--d / sold quantity

SELECT s.date, p.product_code, p.product,p.variant,s.sold_quantity 
FROM gdb0041.fact_sales_monthly s join dim_product p 
on p.product_code = s.product_code
where customer_code = 90002002 and 
get_fisical_year(date) = 2021 and
get_fisical_quater(date) = "Q4"
order by date desc;


--e/ Gross Price per item

SELECT s.date, p.product_code, p.product,p.variant,s.sold_quantity , g.gross_price
FROM gdb0041.fact_sales_monthly s 
join dim_product p 
on p.product_code = s.product_code
join fact_gross_price g 
on
  g.product_code = s.product_code and 
  g.fiscal_year = get_fisical_year(s.date)
where 
customer_code = 90002002  and 
get_fisical_year(date) = 2021 
order by date desc;



--f/ Gross price total

SELECT s.date, p.product_code, p.product,p.variant,s.sold_quantity , g.gross_price, round(g.gross_price*s.sold_quantity) 
as gross_price_total
FROM gdb0041.fact_sales_monthly s 
join dim_product p 
on p.product_code = s.product_code
join fact_gross_price g 
on
  g.product_code = s.product_code and 
  g.fiscal_year = get_fisical_year(s.date)
where 
customer_code = 90002002 and 
get_fisical_year(date) = 2021 
order by date asc;



2/Gross Sales Report: Total Sales Amount


--a/ Aggregate Monthly Gross Sales Report for CROMA India for all the years: Prepare a report on aggregate monthly gross sales to track sales generated by CROMA India.

SELECT s.date, SUM(g.gross_price * s.sold_quantity) as gross_price_total 
FROM gdb0041.fact_sales_monthly s join fact_gross_price g 
on s.product_code = g.product_code and
g.fiscal_year = get_fisical_year(s.date)
where customer_code = 90002002
group by s.date
order by s.date asc;

--b / Croma yearly gross sale report

SELECT get_fisical_year(s.date) as fiscal_year, SUM(g.gross_price * s.sold_quantity) 
as gross_price_total FROM gdb0041.fact_sales_monthly s join fact_gross_price g 
on s.product_code = g.product_code and
g.fiscal_year = get_fisical_year(s.date)
where customer_code = 90002002
group by get_fisical_year(s.date)
order by fiscal_year;



3/  Generate monthly gross sales report for any customer using stored procedure.

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_monthly_gross_sale_for_customer`(in_customer_code TEXT)
BEGIN
    SELECT s.date, SUM(g.gross_price * s.sold_quantity) as gross_price_total FROM gdb0041.fact_sales_monthly s join fact_gross_price g 
    on s.product_code = g.product_code and
	g.fiscal_year = get_fisical_year(s.date)
    where 
    find_in_set(s.customer_code, in_customer_code)>0
    group by s.date;
END

4/ Generate yearly gross sales report for any customer using stored procedure.

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_yearly_gross_sale_for_customer`( in_customer_code TEXT)
BEGIN
     SELECT get_fisical_year(s.date) as fiscal_year, SUM(g.gross_price * s.sold_quantity) as gross_price_total FROM gdb0041.fact_sales_monthly s join fact_gross_price g 
	 on s.product_code = g.product_code and
     g.fiscal_year = get_fisical_year(s.date)
     where 
     find_in_set(s.customer_code, in_customer_code)>0
     group by get_fisical_year(s.date);

END

5/  Market Badge Determination: Create a stored procedure to determine the market badge (Gold or Silver) based on the total sold quantity.

CREATE DEFINER=`root`@`localhost` PROCEDURE `get_market_badge`(IN in_market varchar(45),
IN in_fisical_year year,
OUT out_badge varchar(45))
BEGIN
   declare quantity int default 0;
   if in_market = " " then 
      set in_market = "India";
	end if;
   select sum(sold_quantity) into quantity from fact_sales_monthly s join dim_customer c
   on s.customer_code = c.customer_code 
   where get_fisical_year(s.date)=2021 and market = in_market
   group by c.market;
   if quantity > 5000000 then
    set out_badge = "glod";
   else  set out_badge = "silver";
   end if;

END







